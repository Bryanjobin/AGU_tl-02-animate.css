{"mappings":"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","sources":["src/js/RGraph.activity.js"],"sourcesContent":["'version:2023-02-25 (6.11)';\n//\n    // o--------------------------------------------------------------------------------o\n    // | This file is part of the RGraph package - you can learn more at:               |\n    // |                                                                                |\n    // |                         https://www.rgraph.net                                 |\n    // |                                                                                |\n    // | RGraph is licensed under the Open Source MIT license. That means that it's     |\n    // | totally free to use and there are no restrictions on what you can do with it!  |\n    // o--------------------------------------------------------------------------------o\n\n    RGraph = window.RGraph || {isrgraph:true,isRGraph:true,rgraph:true};\n\n    //\n    // The Activity meter constructor\n    //\n    RGraph.Activity = function (conf)\n    {\n        var id     = conf.id,\n            canvas = document.getElementById(id),\n            min    = conf.min,\n            max    = conf.max,\n            value  = conf.value;\n\n        // id, min, max, value\n        // Get the canvas and context objects\n        this.id                     = id;\n        this.canvas                 = canvas;\n        this.context                = this.canvas.getContext ? this.canvas.getContext(\"2d\", {alpha: (typeof id === 'object' && id.alpha === false) ? false : true}) : null;\n        this.canvas.__object__      = this;\n        this.type                   = 'activity';\n        this.min                    = RGraph.stringsToNumbers(min);\n        this.max                    = RGraph.stringsToNumbers(max);\n        this.value                  = RGraph.stringsToNumbers(value);\n        this.centerx                = null;\n        this.centery                = null;\n        this.radius                 = null;\n        this.isRGraph               = true;\n        this.isrgraph               = true;\n        this.rgraph                 = true;\n        this.currentValue           = null;\n        this.uid                    = RGraph.createUID();\n        this.canvas.uid             = this.canvas.uid ? this.canvas.uid : RGraph.createUID();\n        this.colorsParsed           = false;\n        this.coordsText             = [];\n        this.angles                 =\n        this.coords                 = [];\n        this.original_colors        = [];\n        this.images                 = [];\n        this.firstDraw              = true; // After the first draw this will be false\n        this.stopAnimationRequested = false;// Used to control the animations\n\n        //\n        // If the value is zero set it to very\n        // slightly more than zero so the meter\n        // is drawn correctly.\n        //\n        // Likewise with the maximum value\n        //\n        if (typeof this.value === 'number') {\n            this.value = [this.value];\n        }\n        \n        for (var i=0; i<this.value.length; ++i) {\n            if (this.value[i] <= 0.0000001) {\n                this.value[i] = 0.0000001;\n            }\n        }\n        \n\n\n        // Various config type stuff\n        this.properties =\n        {\n            radius:                             null,\n            centerx:                            null,\n            centery:                            null,\n            width:                              null,\n            ends:                               'round',\n\n            marginLeft:                            15,\n            marginRight:                           15,\n            marginTop:                             15,\n            marginBottom:                          15,\n            marginInner:                           1,\n\n            backgroundGrid:                     false,\n            backgroundGridColor:                '#666',\n            backgroundGridCircles:              true,\n            backgroundGridCirclesCount:         null,\n            backgroundGridRadials:              true,\n            backgroundGridRadialsCount:         8,\n            backgroundRings:                    true,\n            backgroundRingsColors:              null,\n            backgroundRingsAlpha:               0.5,\n\n            backgroundColor:                    'black',\n            colors:                             ['#F45B5B','#90EE7E','#2B908F','red','green','blue','yellow','pink'],\n            \n            \n            icons:                              [],\n            iconsWidth:                         null,\n            iconsHeight:                        null,\n            iconsOffsetx:                       0,\n            iconsOffsety:                       0,\n            \n            textFont:                              'Arial, Verdana, sans-serif',\n            textSize:                              12,\n            textColor:                             '#aaa',\n            textBold:                              false,\n            textItalic:                            false,\n            textAccessible:                        false,\n            textAccessibleOverflow:                'visible',\n            textAccessiblePointerevents:           false,\n            text:                                  null,\n\n            labelsCenter:                              false,\n            labelsCenterIndex:                         0,\n            labelsCenterFont:                          null,\n            labelsCenterSize:                          50,\n            labelsCenterColor:                         null,\n            labelsCenterBold:                          null,\n            labelsCenterItalic:                        null,\n            labelsCenterUnitsPre:                      '',\n            labelsCenterUnitsPost:                     '',\n            labelsCenterDecimals:                      0,\n            labelsCenterPoint:                         '.',\n            labelsCenterThousand:                      ',',\n            labelsCenterSpecific:                      '',\n            labelsCenterOffsetx:                       0,\n            labelsCenterOffsety:                       0,\n            labels:                                    [],\n            labelsColor:                               null,\n            labelsFont:                                null,\n            labelsSize:                                null,\n            labelsBold:                                null,\n            labelsItalic:                              null,\n            labelsBackgroundFill:                      'transparent',\n            labelsBackgroundStroke:                    'transparent',\n            labelsOffsetx:                             0,\n            labelsOffsety:                             0,\n            labelsFormattedDecimals:                    0,\r\n            labelsFormattedPoint:                       '.',\r\n            labelsFormattedThousand:                    ',',\r\n            labelsFormattedUnitsPre:                    '',\r\n            labelsFormattedUnitsPost:                   '',\n\n            contextmenu:                        null,\n            annotatable:                        false,\n            annotatableColor:                   'black',\n            annotatableLinewidth:               1,\n            adjustable:                         false,\n            tooltips:                           null,\n            tooltipsEffect:                     'slide',\n            tooltipsCssClass:                   'RGraph_tooltip',\n            tooltipsCss:                        null,\n            tooltipsEvent:                      'onclick',\n            tooltipsHighlight:                  true,\n            tooltipsHotspotXonly:               false,\n            tooltipsFormattedThousand:          ',',\n            tooltipsFormattedPoint:             '.',\n            tooltipsFormattedDecimals:          0,\n            tooltipsFormattedUnitsPre:          '',\n            tooltipsFormattedUnitsPost:         '',\n            tooltipsFormattedKeyColors:         null,\n            tooltipsFormattedKeyColorsShape:    'square',\n            tooltipsFormattedKeyLabels:         [],\n            tooltipsFormattedListType:          'ul',\n            tooltipsFormattedListItems:         null,\n            tooltipsFormattedTableHeaders:      null,\n            tooltipsFormattedTableData:         null,\n            tooltipsPointer:                    true,\n            tooltipsPositionStatic:             true,\n\n            highlightStyle:                     null,\n            highlightStroke:                    'rgba(0,0,0,0)',\n            highlightFill:                      'rgba(255,255,255,0.5)',\n\n            clearto:                            'rgba(0,0,0,0)'\n        }\n\n\n        // Check for support\n        if (!this.canvas) {\n            alert('[ACTIVITY] No canvas support');\n            return;\n        }\n\n\n\n\n        // Easy access to  properties and the path function\n        var properties = this.properties;\n        this.path      = RGraph.pathObjectFunction;\n        \n        \n        \n        //\n        // \"Decorate\" the object with the generic effects if the effects library has been included\n        //\n        if (RGraph.Effects && typeof RGraph.Effects.decorate === 'function') {\n            RGraph.Effects.decorate(this);\n        }\n        \n        \n        \n        // Add the responsive method. This method resides in the common file.\n        this.responsive = RGraph.responsive;\n\n\n        //\n        // A setter\n        //\n        this.set = function (name)\n        {\n            var value = typeof arguments[1] === 'undefined' ? null : arguments[1];\n\n            // the number of arguments is only one and it's an\n            // object - parse it for configuration data and return.\n            if (arguments.length === 1 && typeof arguments[0] === 'object') {\n                for (i in arguments[0]) {\n                    if (typeof i === 'string') {\n                        this.set(i, arguments[0][i]);\n                    }\n                }\n\n                return this;\n            }\n\n            properties[name] = value;\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // A getter\n        // \n        // @param name  string The name of the property to get\n        //\n        this.get = function (name)\n        {\n            return properties[name];\n        };\n\n\n\n\n\n\n\n\n        //\n        // The function you call to draw the bar chart\n        //\n        this.draw = function ()\n        {\n            //\n            // Fire the onbeforedraw event\n            //\n            RGraph.fireCustomEvent(this, 'onbeforedraw');\n\n\n\n            // Translate half a pixel for antialiasing purposes - but only if it hasn't been\n            // done already\n            //\n            // MUST be the first thing done!\n            //\n            if (!this.canvas.__rgraph_aa_translated__) {\n                this.context.translate(0.5,0.5);\n            \n                this.canvas.__rgraph_aa_translated__ = true;\n            }\n            \n            // Ensure that the obj.value property is an array\n            if (typeof this.value === 'number') {\n                this.value = [this.value];\n            }\n            \n\n\n\n            //\n            // Constrain the value to be within the min and max\n            //\n            for (var i=0; i<this.value.length; ++i) {\n                if (this.value[i] > this.max) this.value[i] = this.max;\n                if (this.value[i] < this.min) this.value[i] = this.min;\n            }\n    \n            //\n            // Set the current value\n            //\n            this.currentValue = RGraph.arrayClone(this.value);\n\n\n\n            //\n            // Make the margins easy to access\n            //\n            this.marginLeft   = properties.marginLeft;\n            this.marginRight  = properties.marginRight;\n            this.marginTop    = properties.marginTop;\n            this.marginBottom = properties.marginBottom;\n            \n            this.centerx = ((this.canvas.width - this.marginLeft - this.marginRight) / 2) + this.marginLeft;\n            this.centery = ((this.canvas.height - this.marginBottom - this.marginTop) / 2) + this.marginTop;\n            this.radius  = Math.min(\n                (this.canvas.width - this.marginLeft - this.marginRight) / 2,\n                (this.canvas.height - this.marginTop - this.marginBottom) / 2\n            );\n                \n            //\n            // Stop this growing uncontrollably\n            //\n            this.coordsText = [];\n    \n    \n    \n            //\n            // Custom centerx, centery and radius\n            //\n            if (typeof properties.centerx === 'number') this.centerx = properties.centerx;\n            if (typeof properties.centery === 'number') this.centery = properties.centery;\n            if (typeof properties.radius  === 'number') this.radius  = properties.radius;\n\n            // The width variable is the width of an individual ring\n            this.width = typeof properties.width === 'number' ? properties.width : ((this.radius * 0.75) / this.value.length);\n            this.width = this.width - properties.marginInner - properties.marginInner;\n\n            // Allow for +/-xx style width\n            if (typeof properties.width === 'string') {\n                this.width += Number(properties.width);\n            }\n\n    \n            //\n            // Parse the colors for gradients. Its down here so that the center X/Y can be used\n            //\n            if (!this.colorsParsed) {\n    \n                this.parseColors();\n    \n                // Don't want to do this again\n                this.colorsParsed = true;\n            }\n    \n\n            //\n            // Draw the meter and its label\n            //\n            this.drawBackground();\n            this.drawMeter();\n            this.drawLabels();\n            this.drawIcons();\n            this.drawEnds();\n\n            //\n            // Setup the context menu if required\n            //\n            if (properties.contextmenu) {\n                RGraph.showContext(this);\n            }\n\n\n\n\n            //\n            // Add custom text thats specified\n            //\n            RGraph.addCustomText(this);\n\n\n\n\n\n            //\n            // This installs the event listeners\n            //\n            RGraph.installEventListeners(this);\n\n\n\n            //\n            // Fire the onfirstdraw event\n            //\n            if (this.firstDraw) {\n                this.firstDraw = false;\n                RGraph.fireCustomEvent(this, 'onfirstdraw');\n                this.firstDrawFunc();\n            }\n\n\n\n\n            //\n            // Fire the RGraph draw event\n            //\n            RGraph.fireCustomEvent(this, 'ondraw');\n\n\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Used in chaining. Runs a function there and then - not waiting for\n        // the events to fire (eg the onbeforedraw event)\n        // \n        // @param function func The function to execute\n        //\n        this.exec = function (func)\n        {\n            func(this);\n            \n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draw the background\"grid\"\n        //\n        this.drawBackground = function ()\n        {\n            // First thing to do is clear the canvas to the backgroundColor\n            if (properties.backgroundColor) {\n                this.path(\n                    'fs % fr -5 -5 % %',\n                    properties.backgroundColor,\n                    this.canvas.width + 10,\n                    this.canvas.height + 10\n                );\n            }\n\n\n\n\n            // Draw the grid?\n            if (properties.backgroundGrid) {\n\n                // Draw the background grey circles\n                if (properties.backgroundGridCircles) {\n\n                    // How many background circles?\n                    if (typeof properties.backgroundGridCirclesCount === 'number') {\n                        var count = properties.backgroundGridCirclesCount;\n                    } else {\n                        var count = this.value.length + 1;\n                    }\n\n                    for (var i=0; i<count; i++) {\n                    \n                        var radius = this.radius - (i * (this.width + (2 * properties.marginInner)));\n\n                        this.path(\n                            'b a % % % 0 6.29 false s %',\n                            this.centerx, this.centery, radius,\n                            properties.backgroundGridColor\n                        );\n                    }\n        \n        \n        \n        \n\n\n                    //\n                    // Draw the background lines that go from the center outwards\n                    //\n                    if (properties.backgroundGridRadials) {\n    \n                        var angle = (RGraph.TWOPI / properties.backgroundGridRadialsCount);\n    \n                        for (var i=0; i<=properties.backgroundGridRadialsCount; ++i) {\n                        \n                            // Radius must be greater than 0 for Opera to work\n                            this.path(\n                                'b    a % % % % % %     a % % % % % %    s %',\n                                this.centerx, this.centery, radius, (i * angle) - RGraph.HALFPI, (i * angle) - RGraph.HALFPI, false,\n                                this.centerx, this.centery, this.radius, (i * angle) - RGraph.HALFPI, (i * angle) - RGraph.HALFPI, false,\n                                properties.backgroundGridColor\n                            );\n                        }\n                    }\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draws the meter\n        //\n        this.drawMeter = function ()\n        {\n            var color;            \n            \n            \n            // This is the maximum radius of the outer ring\n            var r = (this.radius - properties.marginInner);\n\n\n            // Draw the background rings if enabled\n            if (properties.backgroundRings) {\n                //\n                // Loop through the values and draw the background rings\n                //\n                this.context.globalAlpha = properties.backgroundRingsAlpha;\n                \n                for (var i=0; i<this.value.length; ++i) {\n                \n                    // Determine the color\n                    if (RGraph.isArray(properties.backgroundRingsColors) && typeof properties.backgroundRingsColors[i] === 'string') {\n                        color = properties.backgroundRingsColors[i];\n                    } else {\n                        color = properties.colors[i];\n                    }\n\n                    \n                    this.path(\n                        'b       a % % % % % false          a % % % % % true       f %',\n                        \n                        this.centerx,\n                        this.centery,\n                        r - (i * (properties.marginInner + properties.marginInner + this.width)),\n                        0 - RGraph.HALFPI,\n                        RGraph.TWOPI - RGraph.HALFPI,\n                        \n                        this.centerx,\n                        this.centery,\n                        r - this.width - (i * (properties.marginInner + properties.marginInner + this.width)),\n                        RGraph.TWOPI - RGraph.HALFPI,\n                        0 - RGraph.HALFPI,\n                        \n                        color\n                    );\n                }\n                \n                // Reset the alpha value\n                this.context.globalAlpha = 1;\n            }\n\n\n\n\n\n\n\n\n            //\n            // Now loop through the values and draw each circle\n            //\n            for (var i=0; i<this.value.length; ++i) {\n\n                var radians = ((this.value[i] - this.min) / (this.max - this.min)) * RGraph.TWOPI;\n\n                this.path(\n                    'b       a % % % % % false          a % % % % % true       f %',\n                    \n                    this.centerx,\n                    this.centery,\n                    r - (i * (properties.marginInner + properties.marginInner + this.width)),\n                    0 - RGraph.HALFPI,\n                    radians - RGraph.HALFPI,\n                    \n                    this.centerx,\n                    this.centery,\n                    r - this.width - (i * (properties.marginInner + properties.marginInner + this.width)),\n                    radians - RGraph.HALFPI,\n                    0 - RGraph.HALFPI,\n                    \n                    properties.colors[i]\n                );\n\n\n\n\n                // Store the coordinates of the ring\n                this.angles[i] =\n                this.coords[i] = {\n                    x:           this.centerx,\n                    y:           this.centery,\n                    angleStart:  0 - RGraph.HALFPI,\n                    angleEnd:    radians - RGraph.HALFPI,\n                    radiusInner: r - this.width - (i * (properties.marginInner + properties.marginInner + this.width)),\n                    radiusOuter: r - (i * (properties.marginInner + properties.marginInner + this.width)),\n                    color:      properties.colors[i],\n                };\n            }\n\n\n\n\n\n\n\n\n            //\n            // By calling the RGraph.text() function with a blank string the text accessible wrapper DIV\n            // will be created and the responsive function will work as expected (ie the css: and parentCss:\n            // options).\n            //\n            RGraph.text({\n                object: this,\n                     x: -10000,\n                     y: -10000,\n                 color: 'transparent',\n                  text: ''\n            });\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draws the center label and the vertical labels if enabled\n        //\n        this.drawLabels = function ()\n        {\n            //\n            // Draw the label if specified\n            //\n            if (properties.labelsCenter) {\n\n                var textConf = RGraph.getTextConf({\n                    object: this,\n                    prefix: 'labelsCenter'\n                });\n\n                 RGraph.text({\n\n                    object:  this,\n\n                    text: String(properties.labelsCenterSpecific ? properties.labelsCenterSpecific : RGraph.numberFormat({\n                        object:    this,\n                        number:    this.value[properties.labelsCenterIndex].toFixed(properties.labelsCenterDecimals),\n                        unitspre:  properties.labelsCenterUnitsPre,\n                        unitspost: properties.labelsCenterUnitsPost,\n                        point:     properties.labelsCenterPoint,\n                        thousand:  properties.labelsCenterThousand\n                    })),\n                    \n                    x:       this.centerx + properties.labelsCenterOffsetx,\n                    y:       this.centery + properties.labelsCenterOffsety,\n                    \n                    halign:  'center',\n                    valign:  'center',\n                    \n                    color:   textConf.color,\n                    size:    textConf.size,\n                    font:    textConf.font,\n                    bold:    textConf.bold,\n                    italic:  textConf.italic\n                });\n            }\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n               \n            var textConf = RGraph.getTextConf({\n                object: this,\n                prefix: 'labels'\n            });\n\n            if (typeof properties.labels === 'string') {\n                properties.labels = RGraph.arrayPad({\n                    array:  [],\n                    length: this.coords.length,\n                    value:  properties.labels\n                });\n            }\n\n\n            // Loop thru the labels\n            for (var i=0; i<properties.labels.length; ++i) {\n\n                if ( typeof properties.labels === 'object' && properties.labels.length && typeof properties.labels[i] === 'string' ) {\n\n                    var text = RGraph.labelSubstitution({\n                        object:    this,\n                        text:      properties.labels[i],\n                        index:     i,\n                        value:     this.value[i],\n                        decimals:  properties.labelsFormattedDecimals,\n                        point:     properties.labelsFormattedPoint,\n                        thousand:  properties.labelsFormattedThousand,\n                        unitsPre:  properties.labelsFormattedUnitsPre,\n                        unitsPost: properties.labelsFormattedUnitsPost,\n                    });\n                }\n\n\n\n\n\n                RGraph.text({\n                    object: this,\n\n                      text: (   RGraph.isString(properties.labels[i])\n                             || RGraph.isNumber(properties.labels[i]) ) ?  text : '',\n\n                         x: this.coords[i].x - 5 + properties.labelsOffsetx,\n                         y: this.coords[i].y - this.coords[i].radiusOuter + ((this.coords[i].radiusOuter - this.coords[i].radiusInner) / 2) + properties.labelsOffsety,\n\n                    valign: 'center',\n                    halign: 'right',\n              \n                  bounding: true,\n              boundingFill: properties.labelsBackgroundFill,\n            boundingStroke: properties.labelsBackgroundStroke,\n\n            textConfPrefix: 'labels',\n            \n            \n                });\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draws the icons at the start of the circles.\n        //\n        this.drawIcons = function ()\n        {\n            for (var i=0; i<this.value.length; ++i) {\n                if (typeof properties.icons[i] === 'string' && properties.icons[i].length) {\n\n                    this.images[i]       = new Image();\n                    this.images[i].src   = properties.icons[i];\n                    this.images[i].index = i;\n                    var obj              = this;\n\n                    this.images[i].onload = function ()\n                    {\n                        // Aids readability\n                        var img = this;\n\n                        // IMPORTANT:\n                        //\n                        // In this callback the 'this' variable is the image object. The\n                        // 'obj' variable is the chart object.\n                        //\n                        var width  = img.width;\n                        var height = width;\n                        \n                        // Reduce the size of the icon if necessary\n                        if (width >= obj.width) {\n                            width  -= 10;\n                            height -= 10;\n                        }\n\n                        // If a width has been stipulated then use it\n                        if (typeof properties.iconsWidth === 'number') {\n                            width  = properties.iconsWidth;\n                        }\n                        \n                        // If a height has been specified then use it\n                        if (typeof properties.iconsHeight === 'number') {\n                            height  = properties.iconsHeight;\n                        }\n                        \n                        var x = obj.centerx - (width / 3) + ((properties.ends === 'straight' || properties.ends === 'square') ? 15 : 0);\n                        var y = (obj.centery - obj.coords[this.index].radiusOuter + ((obj.coords[this.index].radiusOuter - obj.coords[this.index].radiusInner) / 2)  - (height / 2) );\n                        \n                        x += properties.iconsOffsetx;\n                        y += properties.iconsOffsety;\n\n                        obj.context.drawImage(\n                            this, x, y, width, height\n                        );\n                    };\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // Draws the rounded ends to the bars\n        //\n        this.drawEnds = function ()\n        {\n            if (properties.ends === 'straight' || properties.ends === 'square') {\n                return;\n            }\n\n            for (var i=0; i<this.coords.length; ++i) {\n                \n                var x = this.coords[i].x;\n                var y = this.coords[i].y - ((this.coords[i].radiusOuter - this.coords[i].radiusInner) / 2) - this.coords[i].radiusInner;\n                \n                this.path(\n                    'b a % % % % % false f %',\n                    x,\n                    y,\n                    this.width / 2,\n                    0,\n                    6.29,\n                    properties.colors[i]\n                );\n                \n                \n                // cx,cy,angle,radius\n                var xy = RGraph.getRadiusEndPoint({\n                        cx: this.centerx,\n                        cy: this.centery,\n                     angle: this.coords[i].angleEnd,\n                    radius: ((this.coords[i].radiusOuter - this.coords[i].radiusInner) / 2) + this.coords[i].radiusInner\n                });\n                \n                this.path(\n                    'b a % % % % % false f %',\n                    xy[0],\n                    xy[1],\n                    (this.coords[i].radiusOuter - this.coords[i].radiusInner) / 2,\n                    0,\n                    6.29,\n                    properties.colors[i]\n                );\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // A placeholder function\n        // \n        // @param object The event object\n        //\n        this.getShape = function (e)\n        {\n            var mouseXY = RGraph.getMouseXY(e);\n            var mouseX  = mouseXY[0];\n            var mouseY  = mouseXY[1];\n\n            // Go through the obj.coords array and find the correct index/shape\n            for (var i=0; i<this.coords.length; ++i) {\n\n\n                // Recreate the shape but don't fill/stroke it\n                this.path(\n                    'b    a % % % % % false    a % % % % % true',\n                    \n                    this.coords[i].x,\n                    this.coords[i].y,\n                    this.coords[i].radiusOuter,\n                    this.coords[i].angleStart,\n                    this.coords[i].angleEnd,\n                    \n                    this.coords[i].x,\n                    this.coords[i].y,\n                    this.coords[i].radiusInner,\n                    this.coords[i].angleEnd,\n                    this.coords[i].angleStart\n                );\n\n\n\n\n                //\n                // Add the ends to the path if the bars are capped\n                //\n                if (properties.ends) {\n\n                    this.path(\n                        'a % % % % % false',\n                        this.coords[i].x,\n                        this.coords[i].y - this.coords[i].radiusInner - (this.width / 2),\n                        this.width / 2,\n                        RGraph.HALFPI,\n                        RGraph.PI + RGraph.HALFPI\n                    );\n\n\n                    // cx,cy,angle,radius of the circle at the end of the bar\n                    var xy = RGraph.getRadiusEndPoint({\n                            cx: this.centerx,\n                            cy: this.centery,\n                         angle: this.coords[i].angleEnd,\n                        radius: ((this.coords[i].radiusOuter - this.coords[i].radiusInner) / 2) + this.coords[i].radiusInner\n                    });\n\n                    this.path(\n                        'm % %    a % % % % % false',\n\n                        xy[0],\n                        xy[1],\n\n                        xy[0],\n                        xy[1],\n                        (this.coords[i].radiusOuter - this.coords[i].radiusInner) / 2,\n                        0,\n                        6.29\n                    );\n                }\n\n\n\n\n                if (this.context.isPointInPath(mouseX, mouseY)) {\n\n                    if (RGraph.parseTooltipText) {\n                        var tooltip = RGraph.parseTooltipText(properties.tooltips, i);\n                    }\n\n                    return {\n                    object: this,\n                         x: this.coords[i].x,\n                         y: this.coords[i].y,\n               radiusInner: this.coords[i].radiusInner,\n               radiusOuter: this.coords[i].radiusOuter,\n                angleStart: this.coords[i].angleStart,\n                  angleEnd: this.coords[i].angleEnd,\n                   tooltip: typeof tooltip === 'string' ? tooltip : null,\n                     label: properties.labels && typeof properties.labels[i] === 'string' ? properties.labels[i] : null,\n                   dataset: 0,\n                     index: i,\n           sequentialIndex: i\n                    };\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // This function returns the pertinent value for a particular click (or other mouse event)\n        // \n        // @param obj e The event object\n        //\n        this.getValue = function (e)\n        {\n            var mouseXY = RGraph.getMouseXY(e);\n            var angle   = RGraph.getAngleByXY(\n                this.centerx,\n                this.centery,\n                mouseXY[0],\n                mouseXY[1]\n            );\n\n            // Adjust the angle because canvas angles\n            // start at the east axis\n            angle += RGraph.HALFPI;\n            if (angle > RGraph.TWOPI) {\n                angle -= RGraph.TWOPI;\n            }\n\n            // Calculate the value based on the angle and min/max values\n            var value = ((angle / RGraph.TWOPI) * (this.max - this.min)) + this.min;\n\n            // Ensure that the value is in range\n            value = Math.max(value, this.min);\n            value = Math.min(value, this.max);\n\n            return value;\n        };\n\n\n\n\n\n\n\n\n        //\n        // The getObjectByXY() worker method. Don't call this call:\n        // \n        // RGraph.ObjectRegistry.getObjectByXY(e)\n        // \n        // @param object e The event object\n        //\n        this.getObjectByXY = function (e)\n        {\n            var mouseXY = RGraph.getMouseXY(e),\n                width   = this.width;\n\n            // Work out the radius\n            var radius = RGraph.getHypLength(\n                this.centerx,\n                this.centery,\n                mouseXY[0],\n                mouseXY[1]\n            );\n\n            if (radius > this.radius || radius < (this.radius * 0.25) ) {\n                return null;\n            }\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // This method handles the adjusting calculation for when the mouse is moved\n        // \n        // @param object e The event object\n        //\n        this.adjusting_mousemove = function (e)\n        {\n            //\n            // Handle adjusting for the Bar\n            //\n            if (properties.adjustable && RGraph.Registry.get('adjusting') && RGraph.Registry.get('adjusting').uid == this.uid) {\n\n                var mouseXY = RGraph.getMouseXY(e);\n\n                var radius = RGraph.getHypLength(\n                    this.centerx,\n                    this.centery,\n                    mouseXY[0],\n                    mouseXY[1]\n                );\n\n                var index  = this.getIndexByRadius(radius);\n                \n                // Store the index in the radius\n                if (typeof RGraph.Registry.get('adjusting.index') !== 'number') {\n                    RGraph.Registry.set('adjusting.index', index);\n                    RGraph.addCustomEventListener(this, 'onadjustend', function ()\n                    {\n                        RGraph.Registry.set('adjusting.index', null);\n                    });\n                } else {\n                    index = RGraph.Registry.get('adjusting.index')\n                }\n\n                if (typeof index === 'number') {\n                    this.value[index] = this.getValue(e);\n    \n                    RGraph.clear(this.canvas);\n                    RGraph.redrawCanvas(this.canvas);\n                    RGraph.fireCustomEvent(this, 'onadjust');\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // Returns the relevant index of the relevant datapoint.\n        // But only if it's in range.\n        //\n        // @param number radius The radius to check\n        //\n        this.getIndexByRadius = function (radius)\n        {\n            // Loop through the shapes to determine the correct shape\n            for (var i=0; i<this.coords.length; ++i) {\n                if (radius < this.coords[i].radiusOuter && radius > this.coords[i].radiusInner) {\n                    return i;\n                }\n            }\n            \n            return null;\n        };\n\n\n\n\n\n\n\n\n        //\n        // This method returns the appropriate angle for a value\n        // \n        // @param number value The value\n        //\n        this.getAngle = function (value)\n        {\n            // Higher than max\n            if (value > this.max || value < this.min) {\n                return null;\n            }\n\n            var angle = (((value - this.min) / (this.max - this.min)) * RGraph.TWOPI) - RGraph.HALFPI;\n\n            if (value === this.max) angle -= 0.00001;\n            if (value === this.min) angle += 0.00001;\n            \n            return angle;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Each object type has its own Highlight() function which highlights the appropriate shape\n        //\n        // @param object shape The shape to highlight\n        //\n        this.highlight = function (shape)\n        {\n            if (typeof properties.highlightStyle === 'function') {\n                \n                if (properties.tooltipsHighlight) {\n                    (properties.highlightStyle)(shape);\n                }\n\n\n\n\n            // Highlight all of the rings except this one - essentially an inverted highlight\n            } else if (typeof properties.highlightStyle === 'string' && properties.highlightStyle === 'invert') {\n            \n                if (properties.tooltipsHighlight) {\n                    this.context.beginPath();\n                    \n                    for (var i=0; i<this.coords.length; ++i) {\n                        if (shape.index !== i) {\n                            this.pathBar(i);\n                        }\n                    }\n                \n                    this.context.fillStyle   = properties.highlightFill;\n                    this.context.strokeStyle = properties.highlightStroke;\n                    this.context.stroke();\n                    this.context.fill();\n                }\n\n\n\n\n            // Regular highlighting\n            } else {\n                \n                if (properties.tooltipsHighlight) {\n                    this.context.beginPath();\n                    \n                    this.pathBar(shape.index);\n                \n                    this.context.fillStyle   = properties.highlightFill;\n                    this.context.strokeStyle = properties.highlightStroke;\n                    this.context.stroke();\n                    this.context.fill();\n                }\n            }\n\n\n\n\n        };\n\n\n\n\n\n\n\n\n        //\n        // Paths a bar given an index but does not:\n        //  o stroke\n        //  o fill\n        //  o issue a beginPath() call\n        //  o issue a closePath() call\n        //\n        // Do NOT use when drawing the bars initially - the .coords array\n        // must already be populated.\n        //\n        this.pathBar = function (index)\n        {\n            // Path the outer edge\n            this.path(\n                'a % % % % % false',\n                this.coords[index].x,\n                this.coords[index].y,\n                this.coords[index].radiusOuter,\n                0 - RGraph.HALFPI,\n                this.coords[index].angleEnd\n            );\n            \n            // Get the center x/y coords of the end of the bar\n            var xy = RGraph.getRadiusEndPoint({\n                cx:     this.centerx,\n                cy:     this.centery,\n                angle:  this.coords[index].angleEnd,\n                radius: this.coords[index].radiusInner + ((this.coords[index].radiusOuter - this.coords[index].radiusInner) / 2)\n            });\n        \n            // Path the ending curved end if the ends are round\n            if (properties.ends === 'round') {\n                this.path(\n                    'a % % % % % false',\n                    xy[0],\n                    xy[1],\n                    this.width / 2,\n                    this.coords[index].angleEnd,\n                    this.coords[index].angleEnd + RGraph.PI\n                );\n            }\n        \n            // Path the inner edge\n            this.path(\n                'a % % % % % true',\n                this.coords[index].x,\n                this.coords[index].y,\n                this.coords[index].radiusInner,\n                this.coords[index].angleEnd,\n                this.coords[index].angleStart\n            );\n        \n            // Path the starting curved end if the ends are round\n            if (properties.ends === 'round') {\n                this.path(\n                    'a % % % % % false',\n                    this.centerx,\n                    this.centery - this.coords[index].radiusInner - ((this.coords[index].radiusOuter - this.coords[index].radiusInner) / 2),\n                    this.width / 2,\n                    RGraph.HALFPI,\n                    RGraph.PI  + RGraph.HALFPI\n                );\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // A worker function that handles Activity chart specific tooltip substitutions\n        //\n        this.tooltipSubstitutions = function (opt)\n        {\n\n            return {\n                  index: opt.index,\n                dataset: 0,\n        sequentialIndex: opt.index,\n                  value: this.value[opt.index],\n                 values: this.value\n            };\n        };\n\n\n\n\n\n\n\n\n        //\n        // A worker function that returns the correct color/label/value\n        //\n        // @param object specific The indexes that are applicable\n        // @param number index    The appropriate index\n        //\n        this.tooltipsFormattedCustom = function (specific, index)\n        {\n            return {\n                label: properties.tooltipsFormattedKeyLabels[index]\n            };\n        };\n\n\n\n\n\n\n\n\n        //\n        // This allows for static tooltip positioning\n        //\n        this.positionTooltipStatic = function (args)\n        {\n            var obj      = args.object,\n                e        = args.event,\n                tooltip  = args.tooltip,\n                index    = args.index,\n                canvasXY = RGraph.getCanvasXY(obj.canvas),\n                coords   = this.coords[args.index];\n\n            //cx,cy,angle,radius\n            var point = RGraph.getRadiusEndPoint({\n                cx:     this.centerx,\n                cy:     this.centery,\n                radius: ((coords.radiusOuter - coords.radiusInner) / 2) + coords.radiusInner,\n                angle:  ((coords.angleEnd - coords.angleStart) / 2) + (0 - RGraph.HALFPI)\n            });\n\n            // Position the tooltip in the X direction\n            //args.tooltip.style.left = point[0] - (tooltip.offsetWidth / 2) + 'px';\n            args.tooltip.style.left =\n                  canvasXY[0]\n                + point[0]\n                - (tooltip.offsetWidth / 2)\n                + obj.properties.tooltipsOffsetx\n                + 'px';\n\n            args.tooltip.style.top =\n                  canvasXY[1]\n                + point[1]\n                - tooltip.offsetHeight\n                - 10\n                + obj.properties.tooltipsOffsety\n                + 'px';\n            \n            // If the top of the tooltip is off the top of the page\n            // then move the tooltip down\n            if(parseFloat(args.tooltip.style.top) < 0) {\n                args.tooltip.style.top = 5 + 'px';\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // This allows for easy specification of gradients\n        //\n        this.parseColors = function ()\n        {\n            // Save the original colors so that they can be restored when the canvas is reset\n            if (this.original_colors.length === 0) {\n                this.original_colors.backgroundColor  = RGraph.arrayClone(properties.backgroundColor);\n                this.original_colors.colors           = RGraph.arrayClone(properties.colors);\n            }\n\n            // Parse the background color\n            properties.backgroundColor = this.parseSingleColorForGradient(properties.backgroundColor);\n\n    \n            // Parse colors\n            var colors = properties.colors;\n\n            if (colors && colors.length) {\n                for (var i=0; i<colors.length; ++i) {\n                    colors[i] = this.parseSingleColorForGradient(colors[i]);\n                }\n            }\n        };\n\n\n\n\n\n\n\n\n        //\n        // Use this function to reset the object to the post-constructor state. Eg reset colors if\n        // need be etc\n        //\n        this.reset = function ()\n        {\n        };\n\n\n\n\n\n\n\n\n        //\n        // This parses a single color value\n        //\n        this.parseSingleColorForGradient = function (color)\n        {\n            if (!color || typeof color != 'string') {\n                return color;\n            }\n\n            if (color.match(/^gradient\\((.*)\\)$/i)) {\n\n                // Allow for JSON gradients\n                if (color.match(/^gradient\\(({.*})\\)$/i)) {\n                    return RGraph.parseJSONGradient({\n                        object: this,\n                        def:    RegExp.$1,\n                        radial: true\n                    });\n                }\n\n                var parts = RegExp.$1.split(':');\n                \n                // Create the gradient\n                var grad = this.context.createLinearGradient(\n                    properties.marginLeft,\n                    0,\n                    this.canvas.width - properties.marginLeft - properties.marginRight,\n                    0\n                );\n                \n                var diff = 1 / (parts.length - 1);\n                \n                grad.addColorStop(0, RGraph.trim(parts[0]));\n                \n                for (var j=1,len=parts.length; j<len; ++j) {\n                    grad.addColorStop(j * diff, RGraph.trim(parts[j]));\n                }\n            }\n    \n            return grad ? grad : color;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Using a function to add events makes it easier to facilitate method chaining\n        // \n        // @param string   type The type of even to add\n        // @param function func \n        //\n        this.on = function (type, func)\n        {\n            if (type.substr(0,2) !== 'on') {\n                type = 'on' + type;\n            }\n            \n            if (typeof this[type] !== 'function') {\n                this[type] = func;\n            } else {\n                RGraph.addCustomEventListener(this, type, func);\n            }\n\n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // This function runs once only\n        // (put at the end of the file (before any effects))\n        //\n        this.firstDrawFunc = function ()\n        {\n        };\n\n\n\n\n\n\n\n\n        //\n        // Meter Grow\n        // \n        // This effect gradually increases the represented value\n        // \n        // @param              An object of options - eg: {frames: 60}\n        // @param function     An optional callback function\n        //\n        this.grow = function ()\n        {\n            // Cancel any stop request if one is pending\n            this.cancelStopAnimation();\n\n            var obj = this;\n\n            //\n            // Convert the value to an array if its a number\n            //\n            if (typeof this.value === 'number') {\n                this.value = [this.value];\n            }\n\n            //this.currentValue = this.currentValue || obj.min;\n            if (RGraph.isNull(this.currentValue)) {\n                \n                this.currentValue=[];\n                \n                for (var i=0; i<this.value.length; ++i) {\n                    this.currentValue[i] = this.min;\n                }\n            }\n\n            var opt      = arguments[0] || {},\n                frames   = opt.frames || 30,\n                frame    = 0,\n                diff     = [],\n                step     = [],\n                callback = arguments[1] || function () {},\n                initial  = [];\n            \n            // Set a few properties too by looping through the data\n            for (var i=0; i<this.value.length; ++i) {\n                diff[i] = this.value[i] - this.currentValue[i];\n                step[i] = diff[i] / frames;\n                initial[i] = this.currentValue[i];\n            }\n\n\n\n            function iterator ()\n            {\n                if (obj.stopAnimationRequested) {\n\n                    // Reset the flag\n                    obj.stopAnimationRequested = false;\n\n                    return;\n                }\n\n\n\n\n                for (var i=0; i<obj.value.length; ++i) {\n                    obj.value[i] = initial[i] + (frame * step[i]);\n                }\n                \n                // Increment the frame\n                frame++;\n    \n                RGraph.clear(obj.canvas);\n                RGraph.redrawCanvas(obj.canvas);\n            \n                if (frame <= frames) {\n                    RGraph.Effects.updateCanvas(iterator);\n                } else {\n                    callback(obj);\n                }\n            }\n            \n            iterator();\n            \n            return this;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Couple of functions that allow you to control the\n        // animation effect\n        //\n        this.stopAnimation = function ()\n        {\n            this.stopAnimationRequested = true;\n        };\n\n        this.cancelStopAnimation = function ()\n        {\n            this.stopAnimationRequested = false;\n        };\n\n\n\n\n\n\n\n\n        //\n        // Register the object\n        //\n        RGraph.register(this);\n\n\n\n\n\n\n\n\n        //\n        // This is the 'end' of the constructor so if the first argument\n        // contains configuration data - handle that.\n        //\n        RGraph.parseObjectStyleConfig(this, conf.options);\n    };"],"names":[],"version":3,"file":"index.14c1d432.js.map","sourceRoot":"/__parcel_source_root/"}